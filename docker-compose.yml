version: '3'
services:
  kafka:
    container_name: kafka 
    build:
      context: .
      dockerfile: Dockerfile.kafka 
    ports:
      - "9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka:9092
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093,1@kafka1:9093
      - KAFKA_KRAFT_CLUSTER_ID=ZDFiZmU3ODUyMzRiNGI3NG
    restart: on-failure 

  kafka1:
    container_name: kafka1
    build:
      context: .
      dockerfile: Dockerfile.kafka 
    ports:
      - "9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka:9092
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093,1@kafka1:9093
      - KAFKA_KRAFT_CLUSTER_ID=ZDFiZmU3ODUyMzRiNGI3NG
    restart: on-failure 
    depends_on: 
      - kafka 

  console:
    container_name: console
    build:
      context: .
      dockerfile: Dockerfile.console
    restart: on-failure
    ports:
      - "8080:8080"
    #environment:
    #  - CONFIG_FILEPATH=/tmp/config.yml  
    depends_on:
      - kafka

  python:
    container_name: python_kafka
    build:
      context: .
      dockerfile: Dockerfile.python
    restart: on-failure
    depends_on:
      - kafka

  python_prometheus:
    container_name: python_prometheus
    build: 
      context: .
      dockerfile: Dockerfile.python_prometheus
    volumes:
      - /etc/python_prometheus:/config 
      - prometheus-data:/python_prometheus  
    restart: on-failure
    ports:
      - "8000:8000"

  victoria:
    container_name: victoria
    build:
      context: .
      dockerfile: Dockerfile.victoria
    restart: on-failure
    ports:
      - "8428:8428"
    environment:
      - DATABASE_NAME victoria_db  
    depends_on:
      - kafka
    volumes:
      - vmdata:/storage
    command:
      - "--storageDataPath=/storage"

  telegraf:
    container_name: telegraf
    build:
      context: .
      dockerfile: Dockerfile.telegraf
    restart: on-failure
    depends_on:
      - kafka

  telegraf_prometheus:
    container_name: telegraf_prometheus
    build:
      context: .
      dockerfile: Dockerfile.telegraf_prometheus
    restart: on-failure
    depends_on:
      - python_prometheus 
      - kafka         
  
  grafana:
    container_name: grafana
    build:
      context: .
      dockerfile: Dockerfile.grafana
    restart: on-failure
    ports:
      - "3000:3000"
    depends_on:
      - victoria   
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  vmdata:

networks:
  default:
    name: my-network
